1.Crie uma função que receba um slice de inteiros e retorne a média aritmética dos valores.

package main
import "fmt"
func calcularMedia(slice []int) float64 {
    if len(slice) == 0 {
        return 0.0
    }
    soma := 0
    for _, valor := range slice {
        soma += valor
    }
    media := float64(soma) / float64(len(slice))
    return media
}

2.Crie uma função que receba uma string e retorne a quantidade de vogais presentes.

package main
import (
	"fmt"
	"strings"
)
func contarVogais(texto string) int {
	qtdVogais := 0
	texto = strings.ToLower(texto)
	for _, char := range texto {
		switch char {
		case 'a', 'e', 'i', 'o', 'u':
			qtdVogais++
		}
	}
	return qtdVogais
}

3.Crie uma função que receba um slice de strings e retorne a concatenação de todas as strings.

package main
import "fmt"
func concatenarStrings(slice []string) string {
	resultado := ""
	for _, str := range slice {
		resultado += str
	}
	return resultado
}

4.Crie uma função que receba um slice de inteiros e retorne o segundo maior valor.

package main
import "fmt"
func segundoMaiorValor(slice []int) (int, error) {
	if len(slice) < 2 {
		return 0, fmt.Errorf("O slice deve ter pelo menos dois elementos")
	}
	maior := slice[0]
	segundoMaior := slice[1]
	if segundoMaior > maior {
		maior, segundoMaior = segundoMaior, maior
	}
	for _, valor := range slice[2:] {
		if valor > maior {
			segundoMaior = maior
			maior = valor
		} else if valor > segundoMaior && valor != maior {
			segundoMaior = valor
		}
	}
	return segundoMaior, nil
}

5.Crie uma função que receba um slice de inteiros e um valor inteiro, e retorne a posição do primeiro
elemento igual ao valor no slice. Caso não encontre, retorne -1.

package main
import "fmt"
func encontrarPosicao(slice []int, valor int) int {
	for i, v := range slice {
		if v == valor {
			return i
		}
	}
	return -1
}

6.

